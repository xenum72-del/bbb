#!/bin/bash

# NPM Security Audit Script
# Generates a comprehensive security report for npm dependencies

set -e

echo "🔍 Running NPM Security Audit..."

# Create report header
cat > security-report.md << EOF
# 📊 NPM Security Audit Report

**Scan Date:** $(date)
**Project:** Encounter Ledger PWA
**Node Version:** $(node --version)
**NPM Version:** $(npm --version)

---

## 📦 Dependency Security Analysis

EOF

# Run npm audit and capture both JSON and human readable output
echo "### 🔍 Audit Summary" >> security-report.md
echo "" >> security-report.md

# Get human-readable audit output
AUDIT_OUTPUT=$(npm audit 2>&1 || true)
echo "\`\`\`" >> security-report.md
echo "$AUDIT_OUTPUT" >> security-report.md
echo "\`\`\`" >> security-report.md
echo "" >> security-report.md

# Try to get JSON output for detailed analysis
echo "### 📋 Detailed Analysis" >> security-report.md
echo "" >> security-report.md

npm audit --json > audit-temp.json 2>/dev/null || echo '{"vulnerabilities":{}}' > audit-temp.json

# Check if we have vulnerabilities
VULN_COUNT=$(cat audit-temp.json | jq -r '.metadata.vulnerabilities.total // 0' 2>/dev/null || echo "0")

if [ "$VULN_COUNT" -gt 0 ]; then
    echo "🚨 **Found $VULN_COUNT vulnerabilities**" >> security-report.md
    echo "" >> security-report.md
    
    # Extract vulnerability details
    echo "#### Vulnerability Breakdown" >> security-report.md
    echo "" >> security-report.md
    
    cat audit-temp.json | jq -r '.metadata.vulnerabilities | to_entries[] | "- **\(.key)**: \(.value)"' >> security-report.md 2>/dev/null || echo "- Could not parse vulnerability details" >> security-report.md
    
    echo "" >> security-report.md
    echo "#### Affected Packages" >> security-report.md
    echo "" >> security-report.md
    
    # List affected packages
    cat audit-temp.json | jq -r '.vulnerabilities | keys[]' 2>/dev/null | while read package; do
        echo "- \`$package\`" >> security-report.md
    done || echo "- Could not list affected packages" >> security-report.md
    
else
    echo "✅ **No vulnerabilities found!**" >> security-report.md
    echo "" >> security-report.md
    echo "All dependencies are secure and up to date." >> security-report.md
fi

echo "" >> security-report.md

# Add package information
echo "### 📋 Package Information" >> security-report.md
echo "" >> security-report.md

TOTAL_DEPS=$(npm list --depth=0 2>/dev/null | grep -c "├\|└" || echo "Unknown")
echo "- **Total Dependencies:** $TOTAL_DEPS" >> security-report.md

DEV_DEPS=$(npm list --depth=0 --dev 2>/dev/null | grep -c "├\|└" || echo "Unknown")
echo "- **Dev Dependencies:** $DEV_DEPS" >> security-report.md

echo "- **Last Audit:** $(date)" >> security-report.md
echo "" >> security-report.md

# Add recommendations
echo "### 🛡️ Security Recommendations" >> security-report.md
echo "" >> security-report.md

if [ "$VULN_COUNT" -gt 0 ]; then
    echo "1. **Run \`npm audit fix\`** to automatically fix issues" >> security-report.md
    echo "2. **Update dependencies** with \`npm update\`" >> security-report.md
    echo "3. **Review breaking changes** before major version updates" >> security-report.md
    echo "4. **Consider using \`npm audit fix --force\`** for critical issues" >> security-report.md
else
    echo "1. ✅ **Keep dependencies updated** regularly" >> security-report.md
    echo "2. ✅ **Run security audits** before each release" >> security-report.md
    echo "3. ✅ **Monitor for new vulnerabilities** in CI/CD" >> security-report.md
    echo "4. ✅ **Consider using dependency scanning tools**" >> security-report.md
fi

echo "" >> security-report.md

# Add CI/CD integration note
echo "### 🤖 Automation" >> security-report.md
echo "" >> security-report.md
echo "This report can be integrated into CI/CD pipelines:" >> security-report.md
echo "" >> security-report.md
echo "\`\`\`yaml" >> security-report.md
echo "- name: Security Audit" >> security-report.md
echo "  run: |" >> security-report.md
echo "    npm audit --audit-level=moderate" >> security-report.md
echo "    npm audit --json > security-audit.json" >> security-report.md
echo "\`\`\`" >> security-report.md

# Cleanup
rm -f audit-temp.json

echo "" >> security-report.md
echo "---" >> security-report.md
echo "*Report generated by [npm-security-audit.sh](./scripts/npm-security-audit.sh)*" >> security-report.md

echo "✅ Security report generated: security-report.md"
echo "📊 Vulnerabilities found: $VULN_COUNT"

# Also create a JSON summary for automation
cat > security-audit-summary.json << EOF
{
  "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
  "vulnerabilities": $VULN_COUNT,
  "status": "$([ "$VULN_COUNT" -eq 0 ] && echo "secure" || echo "vulnerable")",
  "nodeVersion": "$(node --version)",
  "npmVersion": "$(npm --version)"
}
EOF

echo "📋 JSON summary created: security-audit-summary.json"